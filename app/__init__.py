from flask import Flask
from werkzeug.middleware.proxy_fix import ProxyFix

from app import log
from app.exts import oauth, login, socketio
from app.blueprints import blueprints

# GENERAL GUIDELINES:
# 1. Design the frontend so that an unsuspecting user can't generate faulty input.
# 2. Only catch errors generated by faulty user input and return a generic error message.
# 3. Don't catch potential errors from our own API or database.
# 4. For naming, only use 'state', never 'status'


def init_exts(app):
    app.wsgi_app = ProxyFix(app.wsgi_app)
    oauth.init_app(app)
    for server in app.config["OAUTH_SERVERS"]:
        oauth.register(server)
    login.init_app(app)
    socketio.init_app(app)


def register_blueprints(app):
    for blueprint in blueprints:
        app.register_blueprint(blueprint)


def create_app(config_files):
    app = Flask(__name__)
    for file in config_files:
        app.config.from_pyfile(file)
    init_exts(app)
    register_blueprints(app)
    # socketio.run(app)
    return app
