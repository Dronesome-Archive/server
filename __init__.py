from os import urandom

from flask import Flask
from werkzeug.middleware.proxy_fix import ProxyFix

import log
from exts import oauth, login, socketio
from blueprints import blueprints

# GENERAL GUIDELINES:
# Only catch errors generated by faulty user input. If there is an error in our own API or database, we crash.
# Invalid requests from the frontend only get feedback if they are honest mistakes from unsuspecting users.


def init_apps(app):
    app.wsgi_app = ProxyFix(app.wsgi_app)
    oauth.init_app(app)
    for server in app.config["OAUTH_SERVERS"]:
        oauth.register(server)
    login.init_app(app)
    socketio.init_app(app)


def register_blueprints(app):
    for blueprint in blueprints:
        app.register_blueprint(blueprint)


if __name__ == '__main__':
    app = Flask(__name__)
    app.config.from_pyfile('config.py')
    app.config.from_pyfile('secret.py')
    app.secret_key = urandom(32)
    log.setup()
    init_apps(app)
    register_blueprints(app)
    socketio.run(app)
